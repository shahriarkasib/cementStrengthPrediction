#---------------------------------------------------------------------
# GitHub Action Workflow to Deploy Flask App to AWS ElasticBeanstalk
#
# Version      Date        Info
# 1.0          2019        Initial Version
###
# Made by Denis shahriar sourav
#---------------------------------------------------------------------
name: CI-CD-Pipeline-of-docker-image-to-AWS-ElasticBeanstalk


on:
  push:
    branches:
      - main

jobs:
    build:
       runs-on: ubuntu-latest

       steps:
         - name: Git clone our repository
           uses: actions/checkout@v1

         - name: Install dependencies
           run: |
             python -m pip install --upgrade pip
             pip install flake8 pytest
             if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
         - name: Lint with flake8
           run: |
             # stop the build if there are Python syntax errors or undefined names
             flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
             # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
             flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

         - name: Print nice message on completion of CI Pipeline
           run : echo "CI Pipeline part finished successfully"

         - name: Login to Docker Hub
           uses: docker/login-action@v1
           with:
             username: ${{ secrets.DOCKER_HUB_USERNAME }}
             password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
         - name: Build and push
           id: docker_build
           uses: docker/build-push-action@v2
           with:
             context: ./
             file: ./Dockerfile
             builder: ${{ steps.buildx.outputs.name }}
             push: true
             tags: ${{ secrets.DOCKER_HUB_USERNAME }}/simplewhale:latest
             cache-from: type=local,src=/tmp/.buildx-cache
             cache-to: type=local,dest=/tmp/.buildx-cache
         - name: Image digest
           run: echo ${{ steps.docker_build.outputs.digest }}

         - name: Image digest
           run: echo ${{ steps.docker_build.outputs.digest }}

